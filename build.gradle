buildscript {
    repositories {
    	mavenCentral()
		jcenter()
        maven {
            name = "Fabric"
            url = "https://maven.fabricmc.net/"
        }
		maven { 
			name = "Jitpack"
			url 'https://jitpack.io/'
		}
	}
	dependencies {
        classpath 'com.github.Chocohead:Fabric-Loom:bbaa5d7'
	}
}

plugins {
	id 'java'
    id 'checkstyle'
}

def getSubprojectVersion(project, ver) {
	return "${project.mod_version}" + "-" + ver
}

sourceSets {
	testmod
}

import net.fabricmc.loom.task.RunClientTask
import net.fabricmc.loom.task.RunServerTask

dependencies {
	apply plugin: "fabric-loom"
	ext.useDep = {dep ->
		implementation dep
		include dep
	}

	// Root project setup nonsense
	// Remind me to add include shit too
	useDep project(":legacy-api-base")
	useDep project(":legacy-attached-data-v1")
	useDep project(":legacy-config-v0")
	useDep project(":legacy-interaction-events-v0")
	useDep project(":legacy-lifecycle-events-v0")
	useDep project(":legacy-networking-v0")
	useDep project(":legacy-networking-v0")
	useDep project(":legacy-recipes-v0")
	useDep project(":legacy-registries-v0")
	useDep project(":legacy-terrain-v1")
	useDep project(":legacy-tile-entities-v1")
	useDep project(":legacy-translations-v0")
	useDep project(":legacy-worldtypes-v1")
	
	include 'com.github.paulevsGitch:B.1.7.3-CoreLib:v.1.3.0'
	include "tk.valoeghese:ZoesteriaConfig:1.3.6"
}

allprojects {	
	apply plugin: "fabric-loom"

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	repositories {
		maven { 
			name = "Jitpack"
			url "https://jitpack.io/"
		}
	}

	minecraft {
	}

	sourceSets {
		testmod {
			compileClasspath += main.compileClasspath
			runtimeClasspath += main.runtimeClasspath
		}
	}

	task runTestmodClient(type: RunClientTask) {
		classpath sourceSets.testmod.runtimeClasspath
	}

	task runTestmodServer(type: RunServerTask) {
		classpath sourceSets.testmod.runtimeClasspath
	}

	dependencies {
		// fabric loader requires log4j, guava, and gson
		implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
		implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
		implementation 'com.google.guava:guava:28.0-jre'
		implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

		// mixin and fabric loader need asm 8
		implementation 'org.ow2.asm:asm:8.0'
		implementation 'org.ow2.asm:asm-analysis:8.0'
		implementation 'org.ow2.asm:asm-commons:8.0'
		implementation 'org.ow2.asm:asm-tree:8.0'
		implementation 'org.ow2.asm:asm-util:8.0'

		//to change the versions see the gradle.properties file
		minecraft "com.mojang:minecraft:${project.minecraft_version}"

		mappings loom.fromCommit("minecraft-cursed-legacy/Plasma", "59b928b") {spec ->
			spec.version = "b1.7.3-15"
		}

		// for config api
		implementation "tk.valoeghese:ZoesteriaConfig:1.3.6"

		modImplementation "com.github.minecraft-cursed-legacy:cursed-fabric-loader:${project.loader_version}"
		
		// CoreLib for Models
		modImplementation 'com.github.paulevsGitch:B.1.7.3-CoreLib:v.1.3.0'
	}
	
	processResources {
		inputs.property "version", project.version

		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": project.version
		}

		from(sourceSets.main.resources.srcDirs) {
			exclude "fabric.mod.json"
		}
	}

	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this task, sources will not be generated.
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}
}

subprojects {
	dependencies {
		testmodCompile sourceSets.main.output
	}
}